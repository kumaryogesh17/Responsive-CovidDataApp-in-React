{"version":3,"sources":["components/statewiseData/statewise.js","App.js","reportWebVitals.js","index.js"],"names":["Statewise","useState","data","setData","getCovidData","a","fetch","mode","response","json","actualData","console","log","statewise","useEffect","className","map","curElem","ind","state","confirmed","recovered","deaths","active","lastupdatedtime","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAgEeA,EA9DG,WAEf,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAY,uCAAI,8BAAAC,EAAA,sEACGC,MAAM,0CAA2C,CAACC,KAAK,SAD1D,cACdC,EADc,gBAEKA,EAASC,OAFd,OAEdC,EAFc,OAGpBC,QAAQC,IAAIF,GACZP,EAAQO,EAAWG,WAJC,2CAAJ,qDAcjB,OAPAC,qBAAU,WACRV,MAEC,IAMK,sBAAKW,UAAU,uBAAf,UAEI,qBAAKA,UAAU,eAAf,SACI,qDAEH,qBAAKA,UAAU,mBAAf,SACC,wBAAOA,UAAU,oBAAjB,UACE,uBAAOA,UAAU,aAAjB,SACI,qBAAIA,UAAU,WAAd,UACI,0CACA,6CACA,6CACA,0CACA,0CACA,mDAIR,gCAGKb,EAAKc,KAAI,SAACC,EAASC,GACd,OACF,+BACI,qBAAIH,UAAU,YAAd,cAA4BE,EAAQE,MAApC,OACA,qBAAIJ,UAAU,YAAd,cAA4BE,EAAQG,UAApC,OACA,qBAAIL,UAAU,YAAd,cAA4BE,EAAQI,UAApC,OACA,qBAAIN,UAAU,YAAd,cAA4BE,EAAQK,OAApC,OACA,qBAAIP,UAAU,YAAd,cAA4BE,EAAQM,OAApC,OACA,qBAAIR,UAAU,YAAd,cAA4BE,EAAQO,gBAApC,SANKN,iB,MCjCtBO,MARf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAD,OCKSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e2f22843.chunk.js","sourcesContent":["import React ,{useState,useEffect} from 'react'\r\n\r\nconst Statewise = () => {\r\n\r\n   const [data, setData] = useState([]);\r\n\r\n   const getCovidData =  async () => {\r\n     const response = await fetch('https://data.covid19india.org/data.json', {mode:'cors'});\r\n     const actualData = await response.json();\r\n     console.log(actualData);\r\n     setData(actualData.statewise);\r\n   }\r\n\r\n    useEffect(() => {\r\n      getCovidData(); \r\n       \r\n    }, []);\r\n\r\n    \r\n\r\n    return (\r\n        \r\n            <div className=\"container-fluid mt-2\">\r\n              \r\n                <div className=\"main-heading\">\r\n                    <h1>COVID DATA PORTAL</h1>\r\n                </div>\r\n                 <div className=\"table-responsive\">\r\n                  <table className=\"table table-hover\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr className=\"headings\">\r\n                            <th> States </th>\r\n                            <td> Confirmed </td>\r\n                            <td> Recovered </td>\r\n                            <td> Deaths </td>\r\n                            <td> Active </td>\r\n                            <td> LastUpdate </td>\r\n                        </tr>\r\n                    </thead>\r\n                    \r\n                    <tbody>\r\n                     \r\n                      { \r\n                         data.map((curElem, ind) => { \r\n                              return(\r\n                            <tr key={ind}>\r\n                                <th className=\"colhover1\"> {curElem.state} </th>\r\n                                <td className=\"colhover2\"> {curElem.confirmed} </td>\r\n                                <td className=\"colhover3\"> {curElem.recovered} </td>\r\n                                <td className=\"colhover4\"> {curElem.deaths} </td>\r\n                                <td className=\"colhover5\"> {curElem.active} </td>\r\n                                <td className=\"colhover6\"> {curElem.lastupdatedtime} </td>\r\n                            </tr>\r\n                              )\r\n                          })\r\n                      }\r\n                    </tbody>\r\n                 </table>\r\n                </div>\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Statewise\r\n","import Statewise from './components/statewiseData/statewise';\r\nimport '../src/components/statewiseData/statewise.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Statewise/> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}